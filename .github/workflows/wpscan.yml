name: WordPress WPScan

on:
  push:
    branches:
      - main

jobs:
  wpscan:
    runs-on: ubuntu-latest

    env:
      # MySQL credentials (for docker-compose)
      DB_PASSWORD: ${{ secrets.FOFIU_FLORIN_GEORGE_DB_PASS }}
      MYSQL_ROOT_PASSWORD: ${{ secrets.FOFIU_FLORIN_GEORGE_DB_PASS }}

      # WP-CLI install credentials (pulled from your secrets)
      WP_ADMIN_USER: ${{ secrets.FOFIU_FLORIN_GEORGE_WP_ADMIN_USER }}
      WP_ADMIN_PASSWORD: ${{ secrets.FOFIU_FLORIN_GEORGE_WP_ADMIN_PASSWORD }}
      WP_ADMIN_EMAIL: ${{ secrets.FOFIU_FLORIN_GEORGE_WP_ADMIN_EMAIL }}

      # WPScan API token
      WPSCAN_API_TOKEN: ${{ secrets.FOFIU_FLORIN_GEORGE_WPSCAN_API_TOKEN }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Start WordPress stack and wait for HTTP 200
        run: |
          docker-compose up -d

          echo "Waiting for WordPress to become available on http://localhost:8080 …"
          for i in {1..30}; do
            if curl -sSf http://localhost:8080 >/dev/null; then
              echo "✔️ WordPress is up (HTTP 200)."
              break
            fi
            echo "  → not ready yet (attempt $i/30), retrying in 5s…"
            sleep 5
          done

          if ! curl -sSf http://localhost:8080 >/dev/null; then
            echo "❌ WordPress did not become available in time."
            exit 1
          fi

      - name: Install WordPress via WP-CLI (using wordpress:cli)
        run: |
          # 1) Grab the container ID of the running "wordpress" service
          WP_CONTAINER=$(docker-compose ps -q wordpress)

          # 2) Run WP-CLI in a separate container, 
          #    mounting the filesystem of the WordPress container (so wp-config.php ends up in /var/www/html)
          #    and sharing its network (so "db:3306" resolves correctly).
          docker run --rm \
            --volumes-from "$WP_CONTAINER" \
            --network "container:$WP_CONTAINER" \
            -e WORDPRESS_DB_HOST="db:3306" \
            -e WORDPRESS_DB_USER="wordpress" \
            -e WORDPRESS_DB_PASSWORD="${DB_PASSWORD}" \
            -e WORDPRESS_DB_NAME="wordpress" \
            wordpress:cli \
              core install \
                --url="http://localhost:8080" \
                --title="Test Site" \
                --admin_user="${WP_ADMIN_USER}" \
                --admin_password="${WP_ADMIN_PASSWORD}" \
                --admin_email="${WP_ADMIN_EMAIL}"

          echo "✔️ WordPress installed (admin user: ${WP_ADMIN_USER})."

      - name: Run WPScan against http://localhost:8080
        run: |
          docker run --rm --network host \
            -e WPSCAN_API_TOKEN="${WPSCAN_API_TOKEN}" \
            wpscanteam/wpscan \
              --url http://localhost:8080 \
              --api-token "${WPSCAN_API_TOKEN}" \
              --enumerate ap,at,cb,dbe,u \
              --disable-tls-checks

      - name: Tear down Docker Compose
        if: ${{ always() }}
        run: docker-compose down
