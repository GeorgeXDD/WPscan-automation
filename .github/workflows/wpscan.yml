name: "WPScan Automation"

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DB_PASSWORD: ${{ secrets.Fofiu_Florin_George_DB_PASS }}
  MYSQL_ROOT_PASSWORD: ${{ secrets.Fofiu_Florin_George_DB_PASS }}

jobs:
  wpscan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # No need to set up Docker; ubuntu-latest already has Docker & Compose v2
      - name: Verify Docker & Docker Compose
        run: |
          docker version
          docker compose version

      - name: Start WordPress + MySQL via Docker Compose
        run: |
          # Launch the containers in detached mode
          docker compose up -d

          # Wait until HTTP 200 on http://localhost:8080 (max 30 retries).
          # Use "|| echo 000" so that curl’s non-zero exit codes don't kill the script.
          for i in {1..30}; do
            STATUS=$(
              curl --silent --output /dev/null \
                  --write-out "%{http_code}" \
                  http://localhost:8080 || echo "000"
            )
            if [ "$STATUS" -eq 200 ]; then
              echo "✅ WordPress is up!"
              break
            fi
            echo "⌛ Waiting for WordPress to be ready… ($i/30)"
            sleep 5
          done

          if [ "$STATUS" -ne 200 ]; then
            echo "::error::WordPress never responded with 200 after 30 tries."
            exit 1
          fi
        env:
          DB_PASSWORD: ${{ secrets.Fofiu_Florin_George_DB_PASS }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.Fofiu_Florin_George_DB_PASS }}

      - name: Install vulnerable plugin (RevSlider)
        run: |
          WP_CONTAINER_ID=$(docker ps -qf "ancestor=wordpress:latest")
          if [ -z "$WP_CONTAINER_ID" ]; then
            echo "Error: WordPress container not found."
            exit 1
          fi
          docker exec "$WP_CONTAINER_ID" bash -lc "wp plugin install revslider --activate --allow-root"
        env:
          DB_PASSWORD: ${{ secrets.Fofiu_Florin_George_DB_PASS }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.Fofiu_Florin_George_DB_PASS }}

      - name: Pull WPScan Docker image
        run: docker pull wpscanteam/wpscan:latest

      - name: Run WPScan via Docker
        run: |
          docker run --rm \
            --network=host \
            wpscanteam/wpscan:latest \
            --url http://host.docker.internal:8080 \
            --api-token "${{ secrets.Fofiu_Florin_George_WPSCAN_API_TOKEN }}" \
            --enumerate vp,vt,u
          # We specify `--network=host` so that “host.docker.internal” resolves to the runner's localhost.

      - name: Teardown Docker Compose
        if: always()
        run: docker compose down -v
