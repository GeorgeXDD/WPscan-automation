name: "WPScan Automation v2"

on:
  workflow_dispatch:
  
env:
  DB_PASSWORD: ${{ secrets.Fofiu_Florin_George_DB_PASS }}
  MYSQL_ROOT_PASSWORD: ${{ secrets.Fofiu_Florin_George_DB_PASS }}

jobs:
  wpscan:
    runs-on: ubuntu-latest
    
    services:
      docker:
        image: docker:dind
        options: --privileged
        ports:
          - 2375:2375
        env:
          DOCKER_TLS_CERTDIR: ""

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Docker setup
        run: |
          docker context create remote --docker "host=tcp://docker:2375" || true
          docker context use remote
          export DOCKER_HOST=tcp://docker:2375

      - name: Start WordPress stack
        run: |
          docker compose --project-directory . up -d
          
          # Health check with 30 retries
          for i in {1..30}; do
            if curl -s -o /dev/null -w "%{http_code}" http://localhost:8080 | grep -q 200; then
              echo "WordPress ready"
              break
            fi
            echo "Waiting for WordPress ($i/30)..."
            sleep 5
          done

      - name: Install vulnerable components
        run: |
          WP_CONTAINER=$(docker ps -qf "ancestor=wordpress:6.5")
          docker exec $WP_CONTAINER wp plugin install revslider --activate --allow-root
          docker exec $WP_CONTAINER wp theme install twentyfifteen --activate --allow-root

      - name: Run WPScan
        run: |
          docker run --rm \
            --network host \
            wpscanteam/wpscan:latest \
            --url http://host.docker.internal:8080 \
            --api-token "${{ secrets.Fofiu_Florin_George_WPSCAN_API_TOKEN }}" \
            --enumerate vp,vt,u \
            --plugins-detection mixed

      - name: Teardown
        if: always()
        run: docker compose down -v
