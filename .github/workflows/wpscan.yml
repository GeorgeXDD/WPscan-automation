name: WordPress WPScan

on:
  push:
    branches:
      - main

jobs:
  wpscan:
    runs-on: ubuntu-latest
    env:
      # these flow into docker-compose.yml and into the WPScan container
      DB_PASSWORD: ${{ secrets.Fofiu_Florin_George_DB_PASS }}
      MYSQL_ROOT_PASSWORD: ${{ secrets.Fofiu_Florin_George_DB_PASS }}
      WPSCAN_API_TOKEN: ${{ secrets.Fofiu_Florin_George_WPSCAN_API_TOKEN }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Start WordPress stack and wait for HTTP 200
        run: |
          docker-compose up -d
          echo "Waiting for WordPress to become available on http://localhost:8080 …"
          for i in {1..30}; do
            if curl -sSf http://localhost:8080 >/dev/null; then
              echo "✔️  WordPress is up (HTTP 200)."
              break
            fi
            echo "  → not ready yet (attempt $i/30), retrying in 5s…"
            sleep 5
          done

          # after 30 tries, check one more time; if still not 200, exit 1
          if ! curl -sSf http://localhost:8080 >/dev/null; then
            echo "❌ WordPress did not become available in time (after 30 retries)."
            exit 1
          fi

      - name: Run WPScan against http://localhost:8080
        run: |
          docker run --rm --network host \
            -e WPSCAN_API_TOKEN="${WPSCAN_API_TOKEN}" \
            wpscanteam/wpscan \
              --url http://localhost:8080 \
              --api-token "${WPSCAN_API_TOKEN}" \
              --enumerate ap,at,cb,dbe,u \
              --disable-tls-checks

      - name: Tear down Docker Compose
        if: ${{ always() }}
        run: docker-compose down
