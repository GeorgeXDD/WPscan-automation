name: "WPScan Automation"

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DB_PASSWORD: ${{ secrets.Fofiu_Florin_George_DB_PASS }}
  MYSQL_ROOT_PASSWORD: ${{ secrets.Fofiu_Florin_George_DB_PASS }}

jobs:
  wpscan:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10
        options: --privileged
        ports:
          - 2375:2375

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Start WordPress + MySQL via Docker Compose V2
        run: |
          # 1) Create/reuse the remote context for Docker-in-Docker
          docker context create remote --docker "host=tcp://localhost:2375" || true
          docker context use remote

          # 2) Launch the containers in detached mode using 'docker compose'
          docker compose up -d

          # 3) Wait until HTTP 200 on http://localhost:8080 (max 30 retries)
          for i in {1..30}; do
            STATUS=$(curl --silent --output /dev/null --write-out "%{http_code}" http://localhost:8080)
            if [ "$STATUS" -eq 200 ]; then
              echo " WordPress is up!"
              break
            fi
            echo " Waiting for WordPress to be ready… ($i/30)"
            sleep 5
          done

      - name: Install vulnerable plugin (revslider)
        run: |
          # Get the WordPress container’s ID
          WP_CONTAINER_ID=$(docker ps -qf "ancestor=wordpress:latest")
          # Use WP-CLI inside the container to install & activate revslider
          docker exec "$WP_CONTAINER_ID" bash -lc "wp plugin install revslider --activate --allow-root"

      - name: Pull WPScan Docker image
        run: docker pull wpscanteam/wpscan:latest

      - name: Run WPScan via Docker
        run: |
          docker run --rm \
            --network=host \
            wpscanteam/wpscan:latest \
            --url http://host.docker.internal:8080 \
            --api-token "${{ secrets.Fofiu_Florin_George_WPSCAN_API_TOKEN }}" \
            --enumerate vp,vt,u

      - name: Teardown Docker Compose V2
        if: always()
        run: docker compose down -v
