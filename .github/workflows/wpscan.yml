name: WordPress WPScan

on:
  push:
    branches:
      - main

jobs:
  wpscan:
    runs-on: ubuntu-latest
    env:
      # these will be injected into docker-compose.yml for db and wp
      DB_PASSWORD: ${{ secrets.Fofiu_Florin_George_DB_PASS }}
      MYSQL_ROOT_PASSWORD: ${{ secrets.Fofiu_Florin_George_DB_PASS }}
      # WPScan API token (needed for enumeration beyond the free rate-limit)
      WPSCAN_API_TOKEN: ${{ secrets.Fofiu_Florin_George_WPSCAN_API_TOKEN }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Start WordPress stack
        run: |
          docker-compose up -d
          echo "Waiting for WordPress to become available on http://localhost:8080 …"
          for i in {1..30}; do
            status_code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080)
            if [ "$status_code" -eq 200 ]; then
              echo "✔️  WordPress is up (HTTP 200)."
              break
            fi
            echo "  → not ready yet (status $status_code), retrying in 5s…"
            sleep 5
          done

      - name: Run WPScan against http://localhost:8080
        run: |
          docker run --rm --network host \
            -e WPSCAN_API_TOKEN="${WPSCAN_API_TOKEN}" \
            wpscanteam/wpscan \
              --url http://localhost:8080 \
              --api-token "${WPSCAN_API_TOKEN}" \
              --enumerate ap,at,cb,dbe,u \
              --disable-tls-checks

      - name: Tear down Docker Compose
        if: ${{ always() }}
        run: docker-compose down
